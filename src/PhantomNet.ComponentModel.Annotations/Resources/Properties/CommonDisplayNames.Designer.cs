// <auto-generated />
namespace Resources
{
    using System.Globalization;
    using System.Reflection;
    using System.Resources;

    internal static class CommonDisplayNames
    {
        private static readonly ResourceManager _resourceManager
            = new ResourceManager("Resources.CommonDisplayNames", typeof(CommonDisplayNames).GetTypeInfo().Assembly);

        /// <summary>
        /// Email
        /// </summary>
        internal static string Email
        {
            get { return GetString("Email"); }
        }

        /// <summary>
        /// Email
        /// </summary>
        internal static string FormatEmail()
        {
            return GetString("Email");
        }

        /// <summary>
        /// Full Name
        /// </summary>
        internal static string FullName
        {
            get { return GetString("FullName"); }
        }

        /// <summary>
        /// Full Name
        /// </summary>
        internal static string FormatFullName()
        {
            return GetString("FullName");
        }

        /// <summary>
        /// Message
        /// </summary>
        internal static string Message
        {
            get { return GetString("Message"); }
        }

        /// <summary>
        /// Message
        /// </summary>
        internal static string FormatMessage()
        {
            return GetString("Message");
        }

        /// <summary>
        /// Phone Number
        /// </summary>
        internal static string PhoneNumber
        {
            get { return GetString("PhoneNumber"); }
        }

        /// <summary>
        /// Phone Number
        /// </summary>
        internal static string FormatPhoneNumber()
        {
            return GetString("PhoneNumber");
        }

        private static string GetString(string name, params string[] formatterNames)
        {
            var value = _resourceManager.GetString(name);

            System.Diagnostics.Debug.Assert(value != null);

            if (formatterNames != null)
            {
                for (var i = 0; i < formatterNames.Length; i++)
                {
                    value = value.Replace("{" + formatterNames[i] + "}", "{" + i + "}");
                }
            }

            return value;
        }
    }
}
